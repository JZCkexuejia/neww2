Dim excelFilewithPath As String =C("txtFileNamePath").Text
Dim excelSaveFile As String =C("txtSaveFile").Text

Dim excel As New XLSXExport(excelFilewithPath)
Dim sheetName As String=excel.SheetNames(0)

Dim dtExcel As DataTable=excel.ReadWorkSheetToDataTable(sheetName)


If dtExcel.Columns.Contains("PART 1") Then  
	dtExcel.Columns("PART 1").ColumnName = "PART1" 
	 
End If 
If  dtExcel.Columns.Contains("PART 2")  Then
	dtExcel.Columns("PART 2").ColumnName = "PART2"  
End If 
If  dtExcel.Columns.Contains("FASTENER REMARKS")  Then
	dtExcel.Columns("FASTENER REMARKS").ColumnName = "FASTENERREMARKS"  
End If 


'Dim uniqueRows As New System.Collections.Generic.Dictionary(Of String, Integer)  
'Dim rowsToDelete As New System.Collections.Generic.List(Of DataRow)  
'
'
'' 遍历DataTable的每一行  
'For Each row As DataRow In  dtExcel.Rows  
'	' 生成组合键：将ColumnA, ColumnB, ColumnC的值连接起来，确保顺序和类型一致以形成完全唯一的标识符 
'	Dim key As String = String.Concat(row("ColumnA").ToString(), "|", row("ColumnB").ToString(), "|", row("ColumnC").ToString()) 
'	' 注意：这里使用"|"作为分隔符，但你可以根据需要选择任何不太可能在列值中出现的字符 
'	 
'	' 检查组合键是否已经在字典中 
'	If uniqueRows.ContainsKey(key) Then 
'		' 如果存在，则将该行添加到该键对应的列表中 
'		uniqueRows(key).Add(row) 
'	Else 
'		' 如果不存在，则创建一个新列表，并将当前行添加到该列表中 
'		uniqueRows.Add(key, New System.Collections.Generic.List(Of DataRow) From {row}) 
'	End If 
'Next  


Dim uniqueRows As New System.Collections.Generic.Dictionary(Of String, Integer)  
Dim rowsToDelete As New System.Collections.Generic.List(Of DataRow)  


  
' 遍历DataTable的每一行  
For Each row As DataRow In dtExcel.Rows  
	' 生成组合键：将ColumnA, ColumnB, ColumnC的值连接起来，这里使用"-"作为分隔符 
	' 注意：在实际应用中，你可能需要选择一个不太可能在列值中出现的字符作为分隔符 
	Dim key As String = String.Format("{0}|{1}|{2}", row("PART1").ToString(), row("PART2").ToString(), row("VOLUME").ToString()) 
	 
	' 检查组合键是否已经在字典中 
	If uniqueRows.ContainsKey(key) Then 
		' 如果存在，则增加该键的计数 
		uniqueRows(key) += 1 
		rowsToDelete.Add(row) ' 标记为删除 
	Else 
		' 如果不存在，则添加新条目，计数为1 
		uniqueRows.Add(key, 1) 
	End If 
Next  


' 删除重复的行  
For Each row As DataRow In rowsToDelete  
	row.Delete() 
Next  

dtExcel.AcceptChanges()  


dtExcel.Columns.Add("DuplicateCount", GetType(Integer))  
  
' 重新遍历DataTable来填充新列（但这次只针对未删除的行）  
Dim nonDuplicateCount As Integer = 0  
For Each row As DataRow In dtExcel.Rows  
	If Not row.RowState = DataRowState.Deleted Then 
		Dim key As String = String.Format("{0}|{1}|{2}", row("PART1").ToString(), row("PART2").ToString(), row("VOLUME").ToString())  
		If uniqueRows.ContainsKey(key) AndAlso uniqueRows(key) > 1 Then 
			' 这里我们不填充重复项的值，因为它们已被删除  
			row("DuplicateCount") = uniqueRows(key) 
			nonDuplicateCount += 1 ' 如果你想要计算非重复项的数量 
		Else 
			' 对于非重复项，我们可能想将其DuplicateCount设置为1或忽略 
			row("DuplicateCount") = 1 
		End If 
	End If 
Next  





For i As Integer = dtExcel.Rows.Count - 1 To 0 Step -1  
	' 检查当前行的指定列的值是否等于 0 
	 
	If Convert.ToInt32(dtExcel.Rows(i)("RESULTS")) = 0 Then 
		' 如果等于0，则删除该行 
		dtExcel.Rows(i).Delete() 
	End If 
Next 

dtExcel.AcceptChanges() 


Dim excelName As String=DateTime.Now.ToString("yyyyMMddHHmmss")&".xlsx"

Dim excelNew As New XLSXExport()

excelNew.AddSheet(sheetName)

excelNew.CellValue(sheetName,1,1)=  "PART1"
excelNew.CellValue(sheetName,1,2)=  "PART2"
excelNew.CellValue(sheetName,1,3)=  "VOLUME"
excelNew.CellValue(sheetName,1,4)=  "FASTENER REMARKS"
excelNew.CellValue(sheetName,1,5)=  "RESULTS"
excelNew.CellValue(sheetName,1,6)=  "State"
excelNew.CellValue(sheetName,1,7)=  "REPEAT TIMES"
Dim IsMatch As Boolean = False  
For xx As Integer = 2  To dtExcel.Rows.Count +1
	excelNew.CellValue(sheetName,xx,1)=  dtExcel.Rows(xx-2)("PART1") 
	excelNew.CellValue(sheetName,xx,2)=  dtExcel.Rows(xx-2)("PART2")  
	excelNew.CellValue(sheetName,xx,3)=  dtExcel.Rows(xx-2)("VOLUME")  
	excelNew.CellValue(sheetName,xx,4)=  dtExcel.Rows(xx-2)("FASTENERREMARKS")  
	excelNew.CellValue(sheetName,xx,5)=  dtExcel.Rows(xx-2)("RESULTS") 	 
	excelNew.CellValue(sheetName,xx,6)=  dtExcel.Rows(xx-2)("State") 
	excelNew.CellValue(sheetName,xx,7)=  dtExcel.Rows(xx-2)("DuplicateCount")  
	 
	If 	 Convert.ToInt32(dtExcel.Rows(xx-2)("RESULTS") ) = 1 Then  
		excelNew.CellBackcolor(sheetName,xx,4)=Color.Red 
		IsMatch=True  
	End If   
	 
Next 
	 
'自动宽度  
excelNew.ColumnsAutoFit(sheetName)  

If IsMatch Then
	excelNew.CellValue(sheetName,1,8)= "JUST" 	 	 
End If 

If Not System.IO.Directory.Exists(excelSaveFile)  Then  
	' 如果文件夹不存在，则创建它 
	System.IO.Directory.CreateDirectory(excelSaveFile) 
End If 
	 
excelNew.SavetoFile(excelSaveFile & excelName, True)  